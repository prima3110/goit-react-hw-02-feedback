{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistic/Statistic.module.css","components/Notification/Notification.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Feedback/Feedback.js","components/App.js","index.js"],"names":["module","exports","Notification","message","defaultProps","Statistic","label","value","className","styles","div","text","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","name","key","shortid","generate","onClick","button","Section","title","Feedback","state","handleLeaveFeedback","e","target","setState","prevState","props","step","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f501165b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3QvIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Statistic_div__1N7Ti\",\"text\":\"Statistic_text__2Q_5B\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <div>\n      <h3>{message}</h3>\n    </div>\n  );\n};\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistic.module.css';\n\nconst Statistic = ({ label, value }) => {\n  return (\n    <div className={styles.div}>\n      <span className={styles.text}>{label}: </span>\n      <span className={styles.text}>{value}</span>\n    </div>\n  );\n};\n\nStatistic.defaultProps = {\n  value: '',\n};\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport Statistic from '../Statistic/Statistic';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return <Notification message=\"No feedback given\" />;\n  }\n  return (\n    <div>\n      <Statistic label=\"Good\" value={good} />\n      <Statistic label=\"Neutral\" value={neutral} />\n      <Statistic label=\"Bad\" value={bad} />\n      <Statistic label=\"Total\" value={total} />\n      <Statistic label=\"Positive Feedback\" value={`${positivePercentage}%`} />\n    </div>\n  );\n};\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: '',\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      <h1>Please leave feedback</h1>\n      {Object.keys(options).map(option => (\n        <button\n          type=\"button\"\n          name={option}\n          key={shortid.generate()}\n          onClick={onLeaveFeedback}\n          className={styles.button}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\n\nconst Section = ({\n  title,\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n  options,\n  onLeaveFeedback,\n}) => {\n  return (\n    <div>\n      <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      <h1>{title}</h1>\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={total}\n        positivePercentage={positivePercentage}\n      />\n    </div>\n  );\n};\n\nSection.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../Section/Section';\n\nexport default class Feedback extends Component {\n  static defaultProps = {\n    step: 1,\n  };\n\n  static propTypes = {\n    step: PropTypes.number,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedback = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + this.props.step,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positivePercentage = this.state.good / this.countTotalFeedback();\n    return (positivePercentage * 100).toFixed(0);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <Section\n          title=\"Statistics\"\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={this.handleLeaveFeedback}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Feedback from './Feedback/Feedback';\n\nconst App = () => (\n  <>\n    <Feedback />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\nimport './main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}